<?xml version="1.0" encoding="UTF-8"?>

<AttributeResolver xmlns="urn:mace:shibboleth:2.0:resolver"
    xmlns:sec="urn:mace:shibboleth:2.0:security"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="urn:mace:shibboleth:2.0:resolver http://shibboleth.net/schema/idp/shibboleth-attribute-resolver.xsd
                      urn:mace:shibboleth:2.0:security http://shibboleth.net/schema/idp/shibboleth-security.xsd">

    <DataConnector propagateResolutionExceptions="false" acceptTypes="application/json" id="rest" xsi:type="HTTP" httpClientRef="WebServiceHttpClient">
        <URLTemplate>
            <![CDATA[
                http://rest:4000/attributes/$pathEscaper.escape($resolutionContext.principal)
            ]]>
        </URLTemplate>

        <ResponseMapping>
            <Script>
                <![CDATA[
        // Java 클래스 임포트
        var HashSet = Java.type("java.util.HashSet");
        var ArrayList = Java.type("java.util.ArrayList");
        var HttpClientSupport = Java.type("net.shibboleth.shared.httpclient.HttpClientSupport");
        var logger = Java.type("org.slf4j.LoggerFactory").getLogger("net.shibboleth.idp.attribute");
        var IdPAttribute = Java.type("net.shibboleth.idp.attribute.IdPAttribute");
        var StringAttributeValue = Java.type("net.shibboleth.idp.attribute.StringAttributeValue");
        var EmptyAttributeValue = Java.type("net.shibboleth.idp.attribute.EmptyAttributeValue");
        
        // HTTP 응답 본문 읽기
        logger.info("=== Shibboleth Attribute Resolver ===");
        var body = HttpClientSupport.toString(response.getEntity(), "UTF-8", 65536);
        logger.info("Response body: " + body);
        
        try {
            // JSON 파싱
            var resultObj = JSON.parse(body);
            
            // 모든 속성 처리
            var keys = Object.keys(resultObj);
            for (var i = 0; i < keys.length; i++) {
                var attName = keys[i];
                logger.info("Processing attribute: " + attName);
                
                // IdPAttribute 생성
                var idpAttribute = new IdPAttribute(attName);
                
                // StringAttributeValue 객체 컬렉션 생성
                var attributeValues = new ArrayList();
                
                // 속성 값 가져오기
                var valuesArray = resultObj[attName];
                
                // 배열인 경우 모든 요소 처리
                if (Object.prototype.toString.call(valuesArray) === '[object Array]') {
                    logger.info(attName + " is an array with " + valuesArray.length + " items");
                    
                    for (var j = 0; j < valuesArray.length; j++) {
                        var value = valuesArray[j];
                        if (value !== null && value !== undefined && value !== "") {
                            logger.info("Adding value: " + value);
                            attributeValues.add(new StringAttributeValue(String(value)));
                        }
                    }
                } else {
                    // 단일 값인 경우
                    logger.info(attName + " is a single value");
                    if (valuesArray !== null && valuesArray !== undefined && valuesArray !== "") {
                        logger.info("Adding value: " + valuesArray);
                        attributeValues.add(new StringAttributeValue(String(valuesArray)));
                    }
                }
                
                // 값이 없으면 NULL_VALUE 추가
                if (attributeValues.isEmpty()) {
                    logger.info("No values found for " + attName + ", adding NULL_VALUE");
                    attributeValues.add(new EmptyAttributeValue(EmptyAttributeValue.EmptyType.NULL_VALUE));
                }
                
                // 값 설정 및 결과에 추가
                idpAttribute.setValues(attributeValues);
                connectorResults.add(idpAttribute);
                logger.info("Added attribute: " + attName + " with " + attributeValues.size() + " values");
            }
            
        } catch (e) {
            logger.error("Error processing attributes: " + e);
            logger.error("Stack trace: " + e.stack);
            throw e;
        }
        ]]>
            </Script>
        </ResponseMapping>

        <!-- <ResultCache expireAfterWrite="PT5M"/> -->
    </DataConnector>
    <AttributeDefinition xsi:type="Simple" id="surname" >
	<InputDataConnector ref="rest"  attributeNames="surname"/> 
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:sn" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.4" friendlyName="Surname" encodeType="false" />
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="givenName" >
	<InputDataConnector ref="rest"  attributeNames="givenName"/> 
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:givenName" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.42" friendlyName="givenName" encodeType="false" />
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="displayName">
	<InputDataConnector ref="rest"  attributeNames="displayName"/> 
        <DisplayName xml:lang="ko">표시 이름</DisplayName>
        <DisplayDescription xml:lang="ko">표시이름</DisplayDescription>
    </AttributeDefinition>

    <!-- login id -->
    <AttributeDefinition xsi:type="Simple" id="uid">
	<InputDataConnector ref="rest"  attributeNames="uid"/> 
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="eduPersonPrincipalName">
        <InputDataConnector ref="rest"  attributeNames="eppn"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.6" friendlyName="eduPersonPrincipalName" encodeType="false" />
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="eduPersonAffiliation">
        <InputDataConnector ref="rest"  attributeNames="eduPersonAffiliation"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.1" friendlyName="eduPersonAffiliation" encodeType="false" />
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="mail" >
	<InputDataConnector ref="rest"  attributeNames="mail"/> 
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:mail" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:0.9.2342.19200300.100.1.3" friendlyName="mail" encodeType="false" />
    </AttributeDefinition>

    <!-- employeeNumber -->
    <AttributeDefinition id="employeeNumber" xsi:type="Simple">
	<InputDataConnector ref="rest"  attributeNames="employeeNumber"/> 
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:employeeNumber" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.16.840.1.113730.3.1.3" friendlyName="employeeNumber" encodeType="false" />
    </AttributeDefinition>

    <!-- 대학명 static -->
    <AttributeDefinition id="organizationName" xsi:type="Simple">
	<InputDataConnector ref="rest"  attributeNames="organizationName"/> 
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:o" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.10" friendlyName="o" encodeType="false" />
    </AttributeDefinition>

    <!-- 학부 -->
  <AttributeDefinition xsi:type="Simple" id="organizationalUnitName" >
	<InputDataConnector ref="rest" attributeNames="organizationalUnitName"/> 
	<AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:organizationalUnitName" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.11" friendlyName="OU" encodeType="false" />
  </AttributeDefinition> 
    <!-- 학년 
<AttributeDefinition xsi:type="Simple" id="grade" >
	<InputDataConnector ref="rest" attributeNames="grade" /> 
    <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:grade" encodeType="false" />
    <AttributeEncoder xsi:type="SAML2String" nameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" name="grade" friendlyName="grade"/>
  </AttributeDefinition>
-->
</AttributeResolver>